//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTestWebService.ServiceReferencePayment {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePayment.IPaymentService")]
    public interface IPaymentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetUsernameByUID", ReplyAction="http://tempuri.org/IPaymentService/GetUsernameByUIDResponse")]
        string GetUsernameByUID(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetUsernameByUID", ReplyAction="http://tempuri.org/IPaymentService/GetUsernameByUIDResponse")]
        System.Threading.Tasks.Task<string> GetUsernameByUIDAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetBalanceByUID", ReplyAction="http://tempuri.org/IPaymentService/GetBalanceByUIDResponse")]
        float GetBalanceByUID(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetBalanceByUID", ReplyAction="http://tempuri.org/IPaymentService/GetBalanceByUIDResponse")]
        System.Threading.Tasks.Task<float> GetBalanceByUIDAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/AddCashWithUID", ReplyAction="http://tempuri.org/IPaymentService/AddCashWithUIDResponse")]
        float AddCashWithUID(int UID, float cash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/AddCashWithUID", ReplyAction="http://tempuri.org/IPaymentService/AddCashWithUIDResponse")]
        System.Threading.Tasks.Task<float> AddCashWithUIDAsync(int UID, float cash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaymentServiceChannel : ConsoleTestWebService.ServiceReferencePayment.IPaymentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentServiceClient : System.ServiceModel.ClientBase<ConsoleTestWebService.ServiceReferencePayment.IPaymentService>, ConsoleTestWebService.ServiceReferencePayment.IPaymentService {
        
        public PaymentServiceClient() {
        }
        
        public PaymentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetUsernameByUID(int uid) {
            return base.Channel.GetUsernameByUID(uid);
        }
        
        public System.Threading.Tasks.Task<string> GetUsernameByUIDAsync(int uid) {
            return base.Channel.GetUsernameByUIDAsync(uid);
        }
        
        public float GetBalanceByUID(int uid) {
            return base.Channel.GetBalanceByUID(uid);
        }
        
        public System.Threading.Tasks.Task<float> GetBalanceByUIDAsync(int uid) {
            return base.Channel.GetBalanceByUIDAsync(uid);
        }
        
        public float AddCashWithUID(int UID, float cash) {
            return base.Channel.AddCashWithUID(UID, cash);
        }
        
        public System.Threading.Tasks.Task<float> AddCashWithUIDAsync(int UID, float cash) {
            return base.Channel.AddCashWithUIDAsync(UID, cash);
        }
    }
}
