//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTestWebService.ServiceReferenceCalculator {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCalculator.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        double Add(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        System.Threading.Tasks.Task<double> AddAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sub", ReplyAction="http://tempuri.org/ICalculator/SubResponse")]
        double Sub(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sub", ReplyAction="http://tempuri.org/ICalculator/SubResponse")]
        System.Threading.Tasks.Task<double> SubAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Mult", ReplyAction="http://tempuri.org/ICalculator/MultResponse")]
        double Mult(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Mult", ReplyAction="http://tempuri.org/ICalculator/MultResponse")]
        System.Threading.Tasks.Task<double> MultAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Div", ReplyAction="http://tempuri.org/ICalculator/DivResponse")]
        double Div(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Div", ReplyAction="http://tempuri.org/ICalculator/DivResponse")]
        System.Threading.Tasks.Task<double> DivAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/GetPersonById", ReplyAction="http://tempuri.org/ICalculator/GetPersonByIdResponse")]
        string GetPersonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/GetPersonById", ReplyAction="http://tempuri.org/ICalculator/GetPersonByIdResponse")]
        System.Threading.Tasks.Task<string> GetPersonByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : ConsoleTestWebService.ServiceReferenceCalculator.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<ConsoleTestWebService.ServiceReferenceCalculator.ICalculator>, ConsoleTestWebService.ServiceReferenceCalculator.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Add(double a, double b) {
            return base.Channel.Add(a, b);
        }
        
        public System.Threading.Tasks.Task<double> AddAsync(double a, double b) {
            return base.Channel.AddAsync(a, b);
        }
        
        public double Sub(double a, double b) {
            return base.Channel.Sub(a, b);
        }
        
        public System.Threading.Tasks.Task<double> SubAsync(double a, double b) {
            return base.Channel.SubAsync(a, b);
        }
        
        public double Mult(double a, double b) {
            return base.Channel.Mult(a, b);
        }
        
        public System.Threading.Tasks.Task<double> MultAsync(double a, double b) {
            return base.Channel.MultAsync(a, b);
        }
        
        public double Div(double a, double b) {
            return base.Channel.Div(a, b);
        }
        
        public System.Threading.Tasks.Task<double> DivAsync(double a, double b) {
            return base.Channel.DivAsync(a, b);
        }
        
        public string GetPersonById(int id) {
            return base.Channel.GetPersonById(id);
        }
        
        public System.Threading.Tasks.Task<string> GetPersonByIdAsync(int id) {
            return base.Channel.GetPersonByIdAsync(id);
        }
    }
}
